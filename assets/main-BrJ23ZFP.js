import{L as i}from"./Leaflet.ImageOverlay.Rotated-2oVWDPUA.js";const _="counterMapIntroDismissed",z=matchMedia("(pointer: coarse)").matches;let c;const u=new Map,f=new Map;let N=[],y;const E=t=>t.reduce((n,e)=>n+e,0)/t.length,d=t=>[E(t.map(n=>n[0])),E(t.map(n=>n[1]))],p=t=>t.reduce((n,[e,o])=>({minLat:Math.min(n.minLat,e),maxLat:Math.max(n.maxLat,e),minLng:Math.min(n.minLng,o),maxLng:Math.max(n.maxLng,o)}),{minLat:90,maxLat:-90,minLng:180,maxLng:-180}),j=(t,n,e)=>t.map(([o,s])=>[o+n,s+e]),P=(t,n)=>{if(n===1)return t;const[e,o]=d(t);return t.map(([s,l])=>[e+(s-e)*n,o+(l-o)*n])},m=(t,n=document)=>n.querySelector(t),T=(t,n=document)=>[...n.querySelectorAll(t)],v=(t,n,e="")=>{const o=document.createElement(t);return n&&(o.className=n),o.innerHTML=e,o};function C(t){if(!t.overlayBounds||!t.overlayImage)return null;const n=t.overlayBounds,e=[n[0],n[1],n[3],n[2]].map(s=>i.latLng(s[0],s[1])),o=i.distortableImageOverlay(t.overlayImage,{corners:e,opacity:t.overlayOpacity??.5,interactive:!1}).once("load",()=>{o._image.style.opacity=(t.overlayOpacity??.5).toString(),o._image.setAttribute("alt",t.title)});return o._mapId=t.id,o._type=t.type,o.addTo(c),u.set(t.id,o),o}function g(t,n){const e=u.get(t),o=f.get(t);!e||t===1||(e._image.classList.toggle("highlight--region",n&&e._type==="region"),e._image.classList.toggle("highlight--town",n&&e._type==="town"),o==null||o.classList.toggle("active",n))}function O(t){f.forEach((n,e)=>n.classList.toggle("expanded",e===t))}function q(){if(localStorage.getItem(_))return;const t=i.control({position:"topleft"});t.onAdd=()=>v("div","info-panel-intro",`
         <div class="intro-content">
           <h3>How to use</h3>
           <ol>
             <li>Click a region / town on the <strong>map</strong> or in the <strong>list</strong>.</li>
             <li>Read the preview and hit <em>More&nbsp;info&nbsp;→</em> for full details.</li>
           </ol>
           <p><span class="region-marker"></span> Regions &nbsp; <span class="town-marker"></span> Towns</p>
           <button id="closeIntro" class="close-btn" aria-label="Close introduction">×</button>
         </div>`),t.addTo(c),setTimeout(()=>{var n;(n=m("#closeIntro"))==null||n.addEventListener("click",()=>{var e;(e=m(".info-panel-intro"))==null||e.classList.add("hidden"),localStorage.setItem(_,"1")})},80)}function D(t){const n=m("#regionList");n.innerHTML="",t.forEach(e=>{const o=v("div","region-card");o.dataset.id=e.id,o.dataset.type=e.type,o.innerHTML=`
         <h3>${e.title}</h3>
         ${e.description?`<p class="card-description">${e.description}</p>`:""}
         <a class="detail-btn" href="${e.detailPage}" aria-label="Open detail page for ${e.title}">
           More&nbsp;info&nbsp;→
         </a>`,o.style.borderColor=e.type==="region"?"#1e90ff":"#daa520",n.appendChild(o),f.set(e.id,o),z||(o.addEventListener("mouseover",()=>g(e.id,!0)),o.addEventListener("mouseout",()=>{o.classList.contains("selected")||g(e.id,!1)})),o.addEventListener("click",s=>{s.target.closest(".detail-btn")||(g(e.id,!0),O(e.id),T(".region-card").forEach(l=>l.classList.remove("selected")),o.classList.add("selected"),o.scrollIntoView({behavior:"smooth",block:"center"}))})})}function V(){c.on("click",t=>{let n=null;if(u.forEach(o=>{const s=o._corners?i.latLngBounds(o._corners):null;s!=null&&s.contains(t.latlng)&&(n=o._mapId)}),T(".region-card").forEach(o=>{o.classList.remove("selected","expanded","active")}),u.forEach((o,s)=>g(s,!1)),!n)return;g(n,!0),O(n);const e=f.get(n);e==null||e.classList.add("selected"),e==null||e.scrollIntoView({behavior:"smooth",block:"center"})})}async function F(){var l;const t=m("#loadingOverlay");c=i.map("map",{center:[18.5,-72],zoom:7,minZoom:6,maxZoom:20,zoomControl:!1,dragging:!1,scrollWheelZoom:!1,doubleClickZoom:!1,boxZoom:!1,keyboard:!1,tap:!1,touchZoom:!1}),i.tileLayer("https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png",{attribution:"Map data © OpenStreetMap contributors, © CARTO"}).addTo(c),q();const n=await(await fetch("/counterMap/data/mapsData.json")).json(),e={};n.maps.filter(a=>a.type==="region").forEach(a=>{C(a),Object.assign(a,p(a.overlayBounds),{_center:d(a.overlayBounds)}),e[a.id]=a});for(const a of n.maps.filter(r=>r.type==="town")){const r=e[a.regionId];if(!r)continue;const h=r.maxLng-r.minLng,S=p(a.overlayBounds).maxLng-p(a.overlayBounds).minLng,Z=Math.max(1.8,h*.7/S),b=P(a.overlayBounds,Z),x=.06,w=p(b),$=d(a.overlayBounds)[1]>=r._center[1]?r.maxLng+x-w.minLng:r.minLng-x-w.maxLng,B=j(b,0,$),L=C({...a,overlayBounds:B,overlayOpacity:a.overlayOpacity??.7});(l=L.setZIndex)==null||l.call(L,9999);const I=d(a.overlayBounds),M=d(B),A=i.polyline([I,M],{color:"#0077ff",weight:3,opacity:.7,dashArray:"5,8",className:"connection-line"}).addTo(c),k=(H,R)=>i.marker(H,{icon:i.divIcon({className:"connection-marker",html:`<div style="width:10px;height:10px;background:${R};border:2px solid #fff;"></div>`,iconSize:[10,10],iconAnchor:[5,5]})}).addTo(c);N.push({townId:a.id,line:A,origin:k(I,"rgba(30,144,255,0.6)"),dest:k(M,"rgba(218,165,32,0.6)")})}const o=n.maps.flatMap(a=>a.overlayBounds.map(([r,h])=>i.latLng(r,h)));y=i.latLngBounds(o),c.fitBounds(y,{padding:[30,30],maxZoom:9});const s=v("button","reset-view-btn","🏠 Reset");s.addEventListener("click",()=>c.fitBounds(y,{padding:[30,30],maxZoom:9})),m(".map-column").appendChild(s),D(n.maps),V(),t.classList.add("hidden")}window.addEventListener("load",F);
